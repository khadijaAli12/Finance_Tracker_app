<div class="card bg-dark text-white shadow-sm mt-4">
  <div class="card-header border-bottom">
    <h5 class="mb-0">Monthly Summary</h5>
  </div>
  <div class="card-body">
    <table class="table table-dark table-bordered">
      <thead>
        <tr>
          <th>Month</th>
          <th>Total Income</th>
          <th>Total Expense</th>
        </tr>
      </thead>
      <tbody id="monthly-summary-body">
        <!-- Filled dynamically by JavaScript -->
      </tbody>
    </table>
  </div>
</div>

<div class="card bg-dark text-white shadow-sm mt-4">
  <div class="card-header border-bottom">
    <h5 class="mb-0">Income vs Expense Trend</h5>
  </div>
  <div class="card-body">
    <canvas id="incomeExpenseChart" height="100"></canvas>
  </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const ctx = document.getElementById('incomeExpenseChart').getContext('2d');
    let incomeExpenseChart;

    function renderTable(data) {
      const tbody = document.getElementById('monthly-summary-body');
      tbody.innerHTML = '';

      data.forEach(row => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${row.month}</td>
          <td class="text-success">$${parseFloat(row.total_income).toFixed(2)}</td>
          <td class="text-danger">$${parseFloat(row.total_expense).toFixed(2)}</td>
        `;
        tbody.appendChild(tr);
      });
    }

    function renderChart(labels, income, expense) {
      if (incomeExpenseChart) incomeExpenseChart.destroy();

      incomeExpenseChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [
            {
              label: 'Income',
              data: income,
              borderColor: 'rgba(0, 255, 132, 1)',
              backgroundColor: 'rgba(0, 255, 132, 0.1)',
              tension: 0.3,
              fill: true
            },
            {
              label: 'Expense',
              data: expense,
              borderColor: 'rgba(255, 99, 132, 1)',
              backgroundColor: 'rgba(255, 99, 132, 0.1)',
              tension: 0.3,
              fill: true
            }
          ]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              labels: {
                color: 'white'
              }
            },
            tooltip: {
              mode: 'index',
              intersect: false
            }
          },
          scales: {
            x: {
              ticks: {
                color: 'white'
              },
              grid: {
                color: 'rgba(255, 255, 255, 0.1)'
              }
            },
            y: {
              beginAtZero: true,
              ticks: {
                color: 'white'
              },
              grid: {
                color: 'rgba(255, 255, 255, 0.1)'
              }
            }
          }
        }
      });
    }

    function fetchAndRender() {
      fetch('/monthly_summary_data')
        .then(response => response.json())
        .then(data => {
          renderTable(data.monthly_data);
          renderChart(data.chart_labels, data.chart_income, data.chart_expense);
        })
        .catch(error => console.error('Error fetching monthly summary:', error));
    }

    fetchAndRender();
  });
</script>
